{
  "source_base_path": "/home/vsts/work/1/s",
  "xrefmap": "xrefmap.yml",
  "files": [
    {
      "type": "Resource",
      "output": {
        "resource": {
          "relative_path": "index.json"
        }
      }
    },
    {
      "type": "Conceptual",
      "source_relative_path": "CHANGELOG.md",
      "output": {
        ".html": {
          "relative_path": "CHANGELOG.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "README.md",
      "output": {
        ".html": {
          "relative_path": "README.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/BigExcelCreator.BigExcelWriter.yml",
      "output": {
        ".html": {
          "relative_path": "api/BigExcelCreator.BigExcelWriter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "BigExcelCreator.BigExcelWriter",
      "Summary": "<p sourcefile=\"api/BigExcelCreator.BigExcelWriter.yml\" sourcestartlinenumber=\"1\">This class writes Excel files directly using OpenXML SAX.\nUseful when trying to write tens of thousands of rows.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/BigExcelCreator.Exceptions.NoOpenRowException.yml",
      "output": {
        ".html": {
          "relative_path": "api/BigExcelCreator.Exceptions.NoOpenRowException.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "BigExcelCreator.Exceptions.NoOpenRowException",
      "Summary": "<p sourcefile=\"api/BigExcelCreator.Exceptions.NoOpenRowException.yml\" sourcestartlinenumber=\"1\">When attempting to write to a row when there is none open</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/BigExcelCreator.Exceptions.NoOpenSheetException.yml",
      "output": {
        ".html": {
          "relative_path": "api/BigExcelCreator.Exceptions.NoOpenSheetException.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "BigExcelCreator.Exceptions.NoOpenSheetException",
      "Summary": "<p sourcefile=\"api/BigExcelCreator.Exceptions.NoOpenSheetException.yml\" sourcestartlinenumber=\"1\">When attempting to write to a sheet when there is none open</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/BigExcelCreator.Exceptions.OutOfOrderWritingException.yml",
      "output": {
        ".html": {
          "relative_path": "api/BigExcelCreator.Exceptions.OutOfOrderWritingException.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "BigExcelCreator.Exceptions.OutOfOrderWritingException",
      "Summary": "<p sourcefile=\"api/BigExcelCreator.Exceptions.OutOfOrderWritingException.yml\" sourcestartlinenumber=\"1\">When attempting to write to a previous row / a row before another already written to</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/BigExcelCreator.Exceptions.RowAlreadyOpenException.yml",
      "output": {
        ".html": {
          "relative_path": "api/BigExcelCreator.Exceptions.RowAlreadyOpenException.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "BigExcelCreator.Exceptions.RowAlreadyOpenException",
      "Summary": "<p sourcefile=\"api/BigExcelCreator.Exceptions.RowAlreadyOpenException.yml\" sourcestartlinenumber=\"1\">When attempting to open a row when there is another already open</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/BigExcelCreator.Exceptions.SheetAlreadyHasFilterException.yml",
      "output": {
        ".html": {
          "relative_path": "api/BigExcelCreator.Exceptions.SheetAlreadyHasFilterException.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "BigExcelCreator.Exceptions.SheetAlreadyHasFilterException",
      "Summary": "<p sourcefile=\"api/BigExcelCreator.Exceptions.SheetAlreadyHasFilterException.yml\" sourcestartlinenumber=\"1\">When attempting to create a filter to a sheet that already has one, without indicating to overwrite the old one</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/BigExcelCreator.Exceptions.SheetAlreadyOpenException.yml",
      "output": {
        ".html": {
          "relative_path": "api/BigExcelCreator.Exceptions.SheetAlreadyOpenException.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "BigExcelCreator.Exceptions.SheetAlreadyOpenException",
      "Summary": "<p sourcefile=\"api/BigExcelCreator.Exceptions.SheetAlreadyOpenException.yml\" sourcestartlinenumber=\"1\">When attempting to open a sheet when there is another already open</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/BigExcelCreator.Exceptions.SheetNameCannotBeEmptyException.yml",
      "output": {
        ".html": {
          "relative_path": "api/BigExcelCreator.Exceptions.SheetNameCannotBeEmptyException.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "BigExcelCreator.Exceptions.SheetNameCannotBeEmptyException",
      "Summary": "<p sourcefile=\"api/BigExcelCreator.Exceptions.SheetNameCannotBeEmptyException.yml\" sourcestartlinenumber=\"1\">When attempting to open a sheet when there is another already open</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/BigExcelCreator.Exceptions.SheetWithSameNameAlreadyExistsException.yml",
      "output": {
        ".html": {
          "relative_path": "api/BigExcelCreator.Exceptions.SheetWithSameNameAlreadyExistsException.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "BigExcelCreator.Exceptions.SheetWithSameNameAlreadyExistsException",
      "Summary": "<p sourcefile=\"api/BigExcelCreator.Exceptions.SheetWithSameNameAlreadyExistsException.yml\" sourcestartlinenumber=\"1\">When attempting to open a sheet when there is another already open</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/BigExcelCreator.Exceptions.UnsupportedSpreadsheetDocumentTypeException.yml",
      "output": {
        ".html": {
          "relative_path": "api/BigExcelCreator.Exceptions.UnsupportedSpreadsheetDocumentTypeException.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "BigExcelCreator.Exceptions.UnsupportedSpreadsheetDocumentTypeException",
      "Summary": "<p sourcefile=\"api/BigExcelCreator.Exceptions.UnsupportedSpreadsheetDocumentTypeException.yml\" sourcestartlinenumber=\"1\">When attempting to open a sheet when there is another already open</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/BigExcelCreator.Exceptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/BigExcelCreator.Exceptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "BigExcelCreator.Exceptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/BigExcelCreator.Ranges.CellRange.yml",
      "output": {
        ".html": {
          "relative_path": "api/BigExcelCreator.Ranges.CellRange.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "BigExcelCreator.Ranges.CellRange",
      "Summary": "<p sourcefile=\"api/BigExcelCreator.Ranges.CellRange.yml\" sourcestartlinenumber=\"1\">Represents a range of cells in an Excel sheet.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/BigExcelCreator.Ranges.InvalidRangeException.yml",
      "output": {
        ".html": {
          "relative_path": "api/BigExcelCreator.Ranges.InvalidRangeException.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "BigExcelCreator.Ranges.InvalidRangeException",
      "Summary": "<p sourcefile=\"api/BigExcelCreator.Ranges.InvalidRangeException.yml\" sourcestartlinenumber=\"1\">When unable to parse a range from a string or a range is not valid</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/BigExcelCreator.Ranges.OverlappingRangesException.yml",
      "output": {
        ".html": {
          "relative_path": "api/BigExcelCreator.Ranges.OverlappingRangesException.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "BigExcelCreator.Ranges.OverlappingRangesException",
      "Summary": "<p sourcefile=\"api/BigExcelCreator.Ranges.OverlappingRangesException.yml\" sourcestartlinenumber=\"1\">When 2 or more ranges overlaps one another</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/BigExcelCreator.Ranges.yml",
      "output": {
        ".html": {
          "relative_path": "api/BigExcelCreator.Ranges.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "BigExcelCreator.Ranges",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/BigExcelCreator.Styles.DifferentialStyleElement.yml",
      "output": {
        ".html": {
          "relative_path": "api/BigExcelCreator.Styles.DifferentialStyleElement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "BigExcelCreator.Styles.DifferentialStyleElement",
      "Summary": "<p sourcefile=\"api/BigExcelCreator.Styles.DifferentialStyleElement.yml\" sourcestartlinenumber=\"1\">A style to be converted to an entry of a stylesheet.</p>\n<p>Used in conditional formatting</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/BigExcelCreator.Styles.StyleElement.yml",
      "output": {
        ".html": {
          "relative_path": "api/BigExcelCreator.Styles.StyleElement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "BigExcelCreator.Styles.StyleElement",
      "Summary": "<p sourcefile=\"api/BigExcelCreator.Styles.StyleElement.yml\" sourcestartlinenumber=\"1\">A style to be converted to an entry of a stylesheet</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/BigExcelCreator.Styles.StyleList.yml",
      "output": {
        ".html": {
          "relative_path": "api/BigExcelCreator.Styles.StyleList.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "BigExcelCreator.Styles.StyleList",
      "Summary": "<p sourcefile=\"api/BigExcelCreator.Styles.StyleList.yml\" sourcestartlinenumber=\"1\">Manages styles and generates stylesheets</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/BigExcelCreator.Styles.yml",
      "output": {
        ".html": {
          "relative_path": "api/BigExcelCreator.Styles.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "BigExcelCreator.Styles",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/BigExcelCreator.yml",
      "output": {
        ".html": {
          "relative_path": "api/BigExcelCreator.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "BigExcelCreator",
      "Summary": null
    },
    {
      "type": "Toc",
      "source_relative_path": "api/toc.yml",
      "output": {
        ".json": {
          "relative_path": "api/toc.json"
        },
        ".html": {
          "relative_path": "api/toc.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "index.md",
      "output": {
        ".html": {
          "relative_path": "index.html"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "toc.yml",
      "output": {
        ".json": {
          "relative_path": "toc.json"
        },
        ".html": {
          "relative_path": "toc.html"
        }
      },
      "version": ""
    }
  ],
  "groups": [
    {
      "xrefmap": "xrefmap.yml"
    }
  ]
}